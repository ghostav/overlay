[[ "${EBUILD_PHASE}" = 'compile' ]] || return

[[ "${CATEGORY}" = sys-kernel ]] \
	|| die "$0: must be called for kernel package"
[[ "${PN}" = *sources ]] \
	|| die "$0: must be called for sources package"

case "${PV}" in
[1234].*|5.[12345]|5.[12345][.-]*)
	;;
*)	einfo "${0}: wireguard is already present in ${PV}"
	return
	;;
esac

# 1:wiregard-path
function __ghostav_bashrc_vpn_wireguard_makefile() {
	local line="obj-\$(CONFIG_WIREGUARD) += wireguard/"
	[[ -f "${S}/net/Makefile" ]] || die "${0}: could not find net/Makefile"
	if grep -qF "${line}" "${S}/net/Makefile"
	then
		ewarn "${0}: wireguard already in net/Makefile"
		return
	fi
	echo "${line}" >> "${S}/net/Makefile"
	einfo "${0}: added wireguard to net/Makefile"
}
# 1:wireguard-path
function __ghostav_bashrc_vpn_wireguard_kconfig() {
	local line="source \"${1}/Kconfig\""
	[[ -f "${1}/Kconfig" ]] || die "${0}: no Kconfig in ${1}"
	[[ -f "${S}/net/Kconfig" ]] || die "${0}: could not find net/Kconfig"
	if grep -qF "${line}" "${S}/net/Kconfig"
	then
		ewarn "${0}: wireguard already source in net/Kconfig"
		return
	fi
	sed -i "/^source \"net\/ipv4\/Kconfig\"\$/a ${line}" "${S}/net/Kconfig"

	grep -qF "${line}" "${S}/net/Kconfig" \
		|| die "${0}: failed to insert wireguard in net/Kconfig"
	einfo "${0}: inserted wireguard in net/Kconfig"
}

# 1:wireguard-path
function __ghostav_bashrc_vpn_wireguard_symlink() {
	local target="${S}/net/wireguard"
	if [[ -d "${target}" ]] ; then
		ewarn "wireguard is already a directory - was it merged?"
	elif [[ -L "${target}" ]] ; then
		ewarn "wireguard is already linked"
	else
		einfo "symlink '${1}' at '${target}'"
		ln -s "${1}" "${target}"
	fi
}

# 1:wireguard-path
function __ghostav_bashrc_vpn_wireguard() {
	[[ -e "${1}" ]] || die "$0: could not find wireguard source"
	__ghostav_bashrc_vpn_wireguard_makefile	"${1}"
	__ghostav_bashrc_vpn_wireguard_kconfig	"${1}"
	__ghostav_bashrc_vpn_wireguard_symlink  "${1}"
}

__ghostav_bashrc_vpn_wireguard "/usr/src/wireguard"
